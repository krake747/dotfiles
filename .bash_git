# ─── GIT ALIASES ─────────────────────────────
unalias gc 2>/dev/null
unalias gcp 2>/dev/null

alias gdefault="git symbolic-ref refs/remotes/origin/HEAD | cut -d'/' -f4"
alias gas="git add -A && git status"
alias gs="git status"
alias grh="git reset HEAD~"
alias grhh="git reset HEAD --hard"
alias gco="git checkout"
alias gnewbr="gcopm && git checkout -b"
alias gpr="git pull -r && git --no-pager log -15 --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)[%an]%Creset' --abbrev-commit"
alias gpo="git push -u origin HEAD"
alias gac="gas && git commit -m"
alias gca="git commit --amend --no-edit"
alias gcaf="gca && git push --force-with-lease"
alias gl="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias gsu="git stash -u"
alias gsp="git stash pop"
alias gss='git stash push -u -m'
alias gfap="git fetch --all --prune"
alias gfapr='gfap && gpr'

# ─── GIT FUNCTIONS ─────────────────────────────
function gc() {
  git commit -m "$1"
}

function gdelbr() {
  main_branch=$(gdefault)
  gco $main_branch && git branch | grep -v "$main_branch" | xargs git branch -D
}

function gcopm() {
  main_branch=$(gdefault)
  gco $main_branch && gpr
}

function gstnewbr() {
  git stash -u && gnewbr "$1" && gsp
}

function gcpp() {
  gas && gc "$1" && gpr && gpo
}

function gcp() {
  gas && gc "$1" && gpo
}

function gcpr() {
  gcp "$1" && pr
}

function pr() {
  github_url=$(git remote get-url origin | sed -E 's#(git@|git://)#https://#' | sed -E 's#:#/#' | sed -E 's#\.git$##')
  branch_name=$(git symbolic-ref --short HEAD)
  main_branch=$(gdefault)
  pr_url="${github_url}/compare/${main_branch}...${branch_name}"

  if grep -qi microsoft /proc/version; then
    /mnt/c/Program\ Files/Google/Chrome/Application/chrome.exe "$pr_url"
  else
    uname=$(uname)
    open_or_start='open'
    [[ "$uname" =~ CYGWIN|MINGW|MSYS ]] && open_or_start='start'
    $open_or_start "$pr_url"
  fi
}
